#!/usr/bin/env python

"""
tron-curses

A curses port of tron with MDP AI.
"""

# Global
import curses as cs
import argparse as ap
import constants as ct
from controllers import KeyController, AIController
from graphics import Drawer
from game import Game


def parse_args():
  parser = ap.ArgumentParser(description=__doc__,
                             formatter_class=ap.RawDescriptionHelpFormatter)

  parser.add_argument('-t',
                      help="""
                      time step rate.
                      Default: {}
                      """.format(ct.DEFAULTS['rate']),
                      dest='rate',
                      type=float,
                      default=ct.DEFAULTS['rate'])

  parser.add_argument('-c',
                      help="""
                      number of computer opponents.
                      Default: {}
                      """.format(ct.DEFAULTS['cpus']),
                      dest='cpus',
                      type=int,
                      default=ct.DEFAULTS['cpus'])

  return parser.parse_args()


def main(scr):
  args = parse_args()
  cs.use_default_colors()
  cs.curs_set(0)

  drawer = Drawer(scr)
  game = Game(drawer.redraw, args.rate, drawer.width, drawer.height)

  controller = KeyController(
    game.new_player(),
    cs.KEY_UP, cs.KEY_DOWN, cs.KEY_RIGHT, cs.KEY_LEFT)

  scr.refresh()
  game.daemon = True
  game.start()

  # Read input
  while True:
    c = scr.getch()
    if c == ord(ct.K_QUIT):
      break
    else:
      controller.handle_key(c)


if __name__ == '__main__':
  cs.wrapper(main)
